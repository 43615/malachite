use malachite_base::num::arithmetic::traits::{
    CoprimeWith, DivExact, DivisibleBy, Gcd, GcdAssign, Lcm, ModPowerOf2,
};
use malachite_base::num::basic::integers::PrimitiveInt;
use malachite_base::num::basic::traits::{One, Zero};
use malachite_base::num::conversion::traits::ExactFrom;
use malachite_base_test_util::generators::common::{GenConfig, TINY_LIMIT};
use malachite_base_test_util::generators::{
    unsigned_gen_var_11, unsigned_pair_gen_var_27, unsigned_vec_unsigned_pair_gen_var_23,
};
use malachite_nz::natural::arithmetic::gcd::half_gcd::HalfGcdMatrix;
use malachite_nz::natural::arithmetic::gcd::matrix_2_2::{
    limbs_matrix_2_2_mul, limbs_matrix_mul_2_2_scratch_len,
};
use malachite_nz::natural::arithmetic::gcd::{gcd_binary_nz, gcd_euclidean_nz, limbs_gcd_limb};
use malachite_nz::natural::Natural;
use malachite_nz::platform::Limb;
use malachite_nz_test_util::common::{
    biguint_to_natural, natural_to_biguint, natural_to_rug_integer, rug_integer_to_natural,
};
use malachite_nz_test_util::generators::{
    large_type_gen_var_5, large_type_gen_var_6, large_type_gen_var_7, large_type_gen_var_8,
    natural_gen, natural_pair_gen, natural_pair_gen_var_4, natural_triple_gen,
};
#[cfg(feature = "32_bit_limbs")]
use malachite_nz_test_util::natural::arithmetic::gcd::half_gcd_matrix_create;
use malachite_nz_test_util::natural::arithmetic::gcd::{
    half_gcd_matrix_1_to_naturals, half_gcd_matrix_to_naturals,
};
use num::BigUint;
use num::Integer as rug_integer;
use std::str::FromStr;

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_limbs_gcd_limb() {
    let test = |xs, y, out| {
        assert_eq!(limbs_gcd_limb(xs, y), out);
    };
    test(&[0, 1], 3, 1);
    test(&[0, 1], 4, 4);
    test(&[3744702173, 1327092413], 1932313754, 7);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_half_gcd_matrix_init() {
    let test = |n, out| {
        let scratch_len = HalfGcdMatrix::min_init_scratch(n);
        assert_eq!(HalfGcdMatrix::init(n, vec![0; scratch_len]), out);
    };
    test(
        1,
        HalfGcdMatrix {
            data: vec![1, 0, 0, 0, 0, 0, 1, 0],
            s: 2,
            two_s: 4,
            three_s: 6,
            n: 1,
        },
    );
    test(
        3,
        HalfGcdMatrix {
            data: vec![1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
            s: 3,
            two_s: 6,
            three_s: 9,
            n: 1,
        },
    );
}

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_half_gcd_matrix_update_q() {
    let test = |mut m, qs: &[Limb], column, m_after| {
        let mut scratch = vec![0; HalfGcdMatrix::update_q_scratch_len(&m, qs.len())];
        m.update_q(qs, column, &mut scratch);
        assert_eq!(m, m_after);
    };
    // qs_len > 1
    // n + qs_len > self.n
    // reached nonzero limb
    // zero carry
    test(
        half_gcd_matrix_create(
            16,
            8,
            vec![
                3364358997, 3754657515, 2983848742, 3936755874, 1784338974, 2546784265, 1325228501,
                2948540251, 0, 0, 0, 0, 0, 0, 0, 0, 48883882, 3336115747, 2904559986, 3732488562,
                2492471725, 1228174159, 2572912965, 1596092594, 0, 0, 0, 0, 0, 0, 0, 0, 2193991530,
                2899278504, 3717617329, 1249076698, 879590153, 4210532297, 3303769392, 1147691304,
                0, 0, 0, 0, 0, 0, 0, 0, 3624392894, 1881877405, 1728780505, 931615955, 1096404509,
                1326003135, 370549396, 1987183422, 0, 0, 0, 0, 0, 0, 0, 0,
            ],
        ),
        &[851586836, 2796582944, 2985872407],
        0,
        half_gcd_matrix_create(
            16,
            11,
            vec![
                2035904157, 337140004, 3757354024, 670541357, 1156551026, 2954076405, 2306281186,
                901391702, 26359260, 3840226876, 1109607712, 0, 0, 0, 0, 0, 48883882, 3336115747,
                2904559986, 3732488562, 2492471725, 1228174159, 2572912965, 1596092594, 0, 0, 0, 0,
                0, 0, 0, 0, 808024130, 607404974, 3634401411, 320381711, 4246353409, 2141048780,
                3541800429, 3925651923, 2116051089, 3713928088, 1381495070, 0, 0, 0, 0, 0,
                3624392894, 1881877405, 1728780505, 931615955, 1096404509, 1326003135, 370549396,
                1987183422, 0, 0, 0, 0, 0, 0, 0, 0,
            ],
        ),
    );
    // qs_len == 1
    test(
        half_gcd_matrix_create(
            3,
            1,
            vec![1918546714, 0, 0, 3992705367, 0, 0, 4279371403, 0, 0, 3759197804, 0, 0],
        ),
        &[3543156725],
        1,
        half_gcd_matrix_create(
            3,
            2,
            vec![
                1918546714, 0, 0, 2304079673, 1582715589, 0, 4279371403, 0, 0, 3341917811,
                3530290808, 0,
            ],
        ),
    );
    // didn't reach nonzero limb
    test(
        half_gcd_matrix_create(
            11,
            5,
            vec![
                0, 4293918720, 4294967295, 134217727, 0, 0, 0, 0, 0, 0, 0, 4294967295, 4294967295,
                4294967295, 4294967295, 4294967295, 0, 0, 0, 0, 0, 0, 268435455, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 4294967295, 4294967295, 134217727, 0, 0, 0, 0, 0, 0, 0, 0,
            ],
        ),
        &[4294967295, 4294967295],
        1,
        half_gcd_matrix_create(
            11,
            6,
            vec![
                0, 4293918720, 4294967295, 134217727, 0, 0, 0, 0, 0, 0, 0, 4294967295, 1048575, 0,
                4159700992, 4294967295, 134217728, 0, 0, 0, 0, 0, 268435455, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 4026531840, 4294967295, 402653182, 0, 0, 0, 0, 0, 0, 0, 0,
            ],
        ),
    );
    // nonzero carry
    test(
        half_gcd_matrix_create(
            26,
            14,
            vec![
                4294967295, 536870911, 0, 0, 0, 3758096384, 4294967295, 4294967295, 4294967295,
                4294967295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4294967295, 4294967295,
                4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
                4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
                4294967295, 524287, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 0, 0, 4294967288, 4294967295, 4294967295, 4294967295, 4294967295, 0, 0,
                0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            ],
        ),
        &[4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295],
        1,
        half_gcd_matrix_create(
            26,
            18,
            vec![
                4294967295, 536870911, 0, 0, 0, 3758096384, 4294967295, 4294967295, 4294967295,
                4294967295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3758096384,
                4294967295, 4294967295, 4294967295, 536870911, 0, 4294967295, 536870911, 0,
                4294967295, 4294967295, 3758096383, 4294967295, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295, 4294967295,
                524287, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
                4294443007, 4294967295, 4294967287, 4294967295, 4294967295, 4294967295, 4294967295,
                524288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            ],
        ),
    );
}

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_limbs_matrix_2_2_mul() {
    let test = |xs_len,
                xs00: &[Limb],
                xs01: &[Limb],
                xs10: &[Limb],
                xs11: &[Limb],
                ys00: &[Limb],
                ys01: &[Limb],
                ys10: &[Limb],
                ys11: &[Limb],
                xs00_out: &[Limb],
                xs01_out: &[Limb],
                xs10_out: &[Limb],
                xs11_out: &[Limb]| {
        let x00 = Natural::from_limbs_asc(&xs00[..xs_len]);
        let x01 = Natural::from_limbs_asc(&xs01[..xs_len]);
        let x10 = Natural::from_limbs_asc(&xs10[..xs_len]);
        let x11 = Natural::from_limbs_asc(&xs11[..xs_len]);
        let mut xs00 = xs00.to_vec();
        let mut xs01 = xs01.to_vec();
        let mut xs10 = xs10.to_vec();
        let mut xs11 = xs11.to_vec();
        let mut scratch = vec![0; limbs_matrix_mul_2_2_scratch_len(xs_len, ys00.len())];
        limbs_matrix_2_2_mul(
            &mut xs00,
            &mut xs01,
            &mut xs10,
            &mut xs11,
            xs_len,
            ys00,
            ys01,
            ys10,
            ys11,
            &mut scratch,
        );
        assert_eq!(xs00, xs00_out);
        assert_eq!(xs01, xs01_out);
        assert_eq!(xs10, xs10_out);
        assert_eq!(xs11, xs11_out);

        let y00 = Natural::from_limbs_asc(ys00);
        let y01 = Natural::from_limbs_asc(ys01);
        let y10 = Natural::from_limbs_asc(ys10);
        let y11 = Natural::from_limbs_asc(ys11);
        let z00 = Natural::from_limbs_asc(&xs00);
        let z01 = Natural::from_limbs_asc(&xs01);
        let z10 = Natural::from_limbs_asc(&xs10);
        let z11 = Natural::from_limbs_asc(&xs11);
        assert_eq!(z00, &x00 * &y00 + &x01 * &y10);
        assert_eq!(z01, x00 * &y01 + x01 * &y11);
        assert_eq!(z10, &x10 * y00 + &x11 * y10);
        assert_eq!(z11, x10 * y01 + x11 * y11);
    };
    // small arguments
    // small arguments, xs_len >= ys_len
    test(
        6,
        &[
            1824026683, 855383832, 2690657440, 2097392823, 1744856106, 145210032, 2603321546,
            3714268226, 2572752468, 3552024211, 2105680113, 94008293, 3599160935,
        ],
        &[
            2100861089, 4058927494, 3716614958, 1374886937, 1422228766, 4125067565, 2659645894,
            3516145724, 333198217, 178588388, 4107267309, 1484604263, 2137933301,
        ],
        &[
            1307794677, 4133495830, 1895462954, 3236069911, 3579790936, 2823361555, 1496151737,
            2535182824, 534572820, 3734537343, 1327464147, 146259718, 609826618,
        ],
        &[
            2641001264, 3832561802, 3044312402, 2136702112, 2248874160, 4213317499, 3447231898,
            3536677714, 1313296525, 2266853686, 2052041169, 347717049, 3434352423,
        ],
        &[17796630, 1709267377, 3881785007, 955800997, 1047963095, 1178960613],
        &[3543460331, 2385517496, 2086915063, 4055235164, 948436119, 2870150085],
        &[773552019, 2621197289, 344580017, 3644778487, 274842105, 3931875648],
        &[3510151397, 4026412532, 4195503381, 682501213, 1600717006, 4252677869],
        &[
            2986138245, 1099838926, 919425337, 2682286770, 2754856871, 2818192521, 1654309759,
            3195744726, 1787512677, 270014583, 3333887406, 3816198933, 0,
        ],
        &[
            343075118, 2459980459, 1480149398, 379857868, 2605135184, 4087866241, 313289235,
            2201953346, 57359095, 3003278162, 1714985241, 4181488913, 0,
        ],
        &[
            2571956126, 963369470, 3125970281, 2288117049, 561041416, 923295190, 2931384231,
            3709683058, 128286972, 2292494833, 488801956, 337168684, 1,
        ],
        &[
            2992440279, 2112449146, 2902973305, 109063322, 1501017829, 475736264, 25775141,
            3410631721, 3956905026, 3154770531, 1888093339, 1763601187, 1,
        ],
    );
    // small arguments, xs_len < ys_len
    test(
        2,
        &[
            342664039, 3864205283, 1256491723, 1548927821, 721895559, 1910261306, 1235301118,
            799978473, 549823983, 2512819824, 2068299963, 2595078570, 2035992824, 1064296193,
            3249660883,
        ],
        &[
            3453614628, 3979759903, 3415299769, 13499660, 1318795951, 4144584485, 2603705982,
            1273366949, 1110716009, 4026346288, 4104893234, 1485704330, 993867679, 3893686890,
            3439773462,
        ],
        &[
            1413063068, 1416612149, 250032189, 2057599093, 512591148, 2867423455, 157645789,
            33515858, 259890804, 2083013527, 2993123902, 3443423003, 2587947916, 2060570216,
            358183429,
        ],
        &[
            3771316904, 1123102423, 3617951287, 3593485506, 3547215643, 4279031677, 3253560754,
            4217820186, 342159470, 3956944812, 4058756711, 3961349923, 734903752, 3497757471,
            2783111581,
        ],
        &[
            560210975, 3955544118, 1525693335, 2423056590, 1672468134, 1425293729, 3576282506,
            2808604793, 2173831628, 3419991459, 1679121946, 1623263180,
        ],
        &[
            269931918, 1859534151, 1418011147, 3930467901, 3120401510, 2878732263, 2440621113,
            3698526898, 1960607269, 766485754, 1276737094, 1400250704,
        ],
        &[
            31094149, 3099789406, 924340153, 1040795176, 864813453, 1273500430, 1433881359,
            3857073234, 725256613, 302279104, 1991322247, 3304275709,
        ],
        &[
            1816819354, 1423518943, 1640383514, 2897037119, 3299791289, 2007192829, 3211337188,
            141201204, 2347531699, 2806328153, 4130308450, 1398383850,
        ],
        &[
            2476191277, 2109850628, 475699680, 1695888498, 997959785, 3844200037, 3615832345,
            3189739607, 4090633814, 4172440182, 2429164332, 1687921897, 3000987025, 227266471, 1,
        ],
        &[
            4293289930, 3312097786, 3225023610, 1814982734, 4123961773, 3202664630, 3288402967,
            3423618017, 2648236802, 1235962392, 3785214889, 4142071340, 2656497128, 2555569668, 0,
        ],
        &[
            550585132, 1958217637, 1079695233, 2070051690, 1642769243, 2223520962, 2790719352,
            1102872554, 1250178031, 2079404531, 2578751592, 3643898046, 2569241678, 1399445906, 0,
        ],
        &[
            1489643928, 2454326491, 2000310088, 504396801, 1710204547, 859777848, 2758305889,
            1268262193, 931603943, 2447640352, 2661054782, 1778884540, 664908352, 827512809, 0,
        ],
    );
    // large arguments
    // !x11_sign first
    // !x01_sign first && *xs01_lo_last == 0
    // t0_sign first
    // *t0_last == 0
    // x01_sign == t0_sign
    // !t0_sign second && *t0_last == 0
    // !x01_sign second
    // !x11_sign second
    // !t0_sign third
    test(
        13,
        &[
            2327266888, 159606339, 3865198656, 559105571, 2679446641, 3007100930, 1196374243,
            2596728943, 1430648584, 25111289, 3084098662, 482968659, 31861624, 1410839754,
            2868430508, 2675304181, 2820971697, 8433363, 356205126, 104388181, 4288829918,
            3309134473, 419097037, 2074236894, 2540543830, 4244884836, 1103759092,
        ],
        &[
            2582817524, 4164383668, 1706646291, 1800000652, 1666270692, 2628289120, 568570643,
            1583069261, 439682583, 3837085850, 247464905, 3856266079, 200842326, 965872188,
            2600055254, 1543566961, 1164241353, 2239343733, 1797130797, 3623500339, 1808008532,
            2868955656, 564142102, 1020590314, 4158719441, 3395391357, 181182939,
        ],
        &[
            2210310100, 69043551, 2823304128, 859345289, 809080897, 120879541, 848904185,
            3835017916, 4066448129, 827700778, 641878366, 728444321, 22823142, 834400226,
            2533421831, 507928329, 398885658, 2332167275, 2030642299, 2377794489, 4277961295,
            2703891174, 3551408972, 450706094, 3991414091, 2973081680, 2714910760,
        ],
        &[
            3640661014, 3206858101, 1737126835, 2106218066, 1425703988, 2338047020, 712809585,
            1420991435, 802147205, 1773895924, 2923903580, 4180731388, 625628901, 81750990,
            3245267790, 2492995722, 457141292, 1264357942, 2610553127, 4085223468, 2725553562,
            3215595517, 3513268137, 4258341409, 1316871298, 2379198914, 1468344750,
        ],
        &[
            3008762500, 1175160375, 2716597715, 2933871453, 475199659, 3313171252, 201726752,
            3994474734, 3542696350, 475569587, 3061861352, 2795963138, 283981201,
        ],
        &[
            4169211551, 1045673686, 3266173725, 1121123371, 2838095204, 3904211332, 2018560297,
            1147750373, 444496996, 2142529574, 3971639805, 3751979387, 2535175321,
        ],
        &[
            1047770371, 1327165786, 2797828578, 2685696909, 3147360099, 2201558235, 1866861337,
            3761155252, 1834270154, 2215232253, 3198169502, 1924553977, 1837870685,
        ],
        &[
            2114181245, 3857180605, 3554288771, 865294166, 1626355571, 408295120, 177441714,
            1458573842, 2220915043, 163377253, 1218043108, 2602503433, 528893379,
        ],
        &[
            2717110780, 986237674, 4250650056, 1544812173, 3986397690, 3836431188, 1613821249,
            2248597207, 2448784182, 2786929074, 1893569847, 1881917363, 2790152996, 3179057496,
            3799013333, 237221218, 3475954500, 4281253174, 3125290097, 2813956421, 1855289745,
            377172866, 3911404025, 3636398044, 3080186791, 88049640, 0,
        ],
        &[
            3505418204, 565465608, 1097112481, 3850268278, 2024670176, 2587290050, 3411014407,
            245345981, 2788535930, 2809261912, 2745706761, 556134486, 3944352700, 2638013922,
            4093507304, 1504147190, 2989086350, 3911331623, 2934713592, 3270681569, 2138704930,
            3059900964, 978968136, 2445899049, 3968088878, 43539092, 0,
        ],
        &[
            3865656210, 3194879205, 414139316, 177501159, 2684513621, 1999012183, 2643222146,
            294716300, 4274795829, 1085676658, 3215144153, 1601970312, 3171535086, 643673394,
            3946671909, 4065144781, 215713465, 172238316, 2724659711, 799017611, 153635789,
            429414755, 1974259637, 1237183745, 2501881650, 269223554, 0,
        ],
        &[
            858223466, 4042145127, 1530910355, 223572531, 3154483634, 1177157565, 2140895357,
            1246913012, 2944555982, 1472007124, 1255831930, 1641310063, 2184842279, 2314841816,
            3300111001, 1618884985, 908327583, 2089112945, 1411422173, 2387337957, 3072912755,
            3289360053, 2808553404, 730378617, 671725420, 90513297, 0,
        ],
    );
    // x11_sign first
    // !t0_sign first
    // *t0_last != 0
    // *xs01_lo_last == 0
    // !t0_sign second && *t0_last != 0
    test(
        15,
        &[
            1698534354, 3051849227, 453937331, 3597744389, 4188491352, 1540429554, 1541686219,
            53413474, 2449460985, 2817396669, 2111985345, 2509026402, 1809740433, 3289293410,
            2617592565, 2791033656, 2892380542, 4279121468, 1127688708, 1053029299, 916223848,
            2015034641, 342194872, 1618165570, 3500431510, 192527413, 2131355967, 3029734551,
            2974882323, 1660068342, 2973244676,
        ],
        &[
            1838750278, 66304311, 2535657427, 2850224201, 698579880, 1262199901, 3281530768,
            2112263091, 2707934779, 1567684797, 1075812175, 3518220523, 1324578919, 2267335289,
            3456142629, 3821323209, 1326553164, 564294454, 4194035902, 1211624633, 4195909292,
            2658461285, 789623662, 2974487150, 1275698083, 2125737295, 4192486278, 3187284022,
            88896961, 2297316271, 3463163938,
        ],
        &[
            3818564698, 3079932038, 3482135970, 684071506, 1279597152, 608056186, 4111845555,
            4244378225, 1830629760, 3169670996, 2225259632, 2264284180, 3411037700, 2316989665,
            4067022578, 3527348537, 1977664147, 2506129832, 2221226065, 1330889781, 1701021791,
            644923460, 1849689221, 2715236311, 2773306484, 239859281, 3230697771, 19267319,
            558009472, 1404018120, 3728834892,
        ],
        &[
            1670192276, 1652365370, 735393172, 511768757, 2457280859, 3609810335, 3935660653,
            1797012973, 2672222932, 1933650427, 649516978, 512827590, 782690911, 2062492600,
            2388214063, 3703253089, 904911621, 3390829428, 3844496615, 3067716449, 2596709309,
            1917646504, 1265079680, 3900449910, 367095064, 999066040, 1909678899, 1128678763,
            1656559628, 4266623984, 3645416988,
        ],
        &[
            1921432021, 3518700209, 2079139530, 1137029652, 2300568548, 1222502019, 4223478985,
            2972106290, 3031541529, 2100809044, 1022823954, 194891273, 3689971092, 3296679225,
            4094754776,
        ],
        &[
            948939782, 2806265501, 2304000452, 2075826159, 909827325, 768415732, 2455484163,
            1934928621, 980278935, 2767893850, 1683388302, 1684144848, 3942412863, 331912133,
            3187438755,
        ],
        &[
            1356019384, 2887360290, 1007932454, 3678465615, 2580178110, 3043732489, 3324841406,
            937504067, 386593536, 1673041889, 3131783437, 1641423898, 4040080328, 3081806329,
            1375763815,
        ],
        &[
            1047656638, 2177659443, 4241187176, 2747048355, 1596389859, 4248315455, 3794436052,
            415309719, 1967342941, 3004037899, 374134042, 1698070105, 2693572544, 3158142963,
            4229995607,
        ],
        &[
            960652810, 221555597, 2254803219, 2541562745, 754445106, 359755753, 480947080,
            1224152909, 4273400475, 2309775298, 69810482, 2561255677, 3113057442, 3555394132,
            2689777384, 3342925543, 3147365260, 135644488, 3684637040, 3040946646, 1628023293,
            4023411971, 908469819, 409304848, 3324164633, 1421103084, 368154340, 3701822194,
            274487004, 3602643412, 0,
        ],
        &[
            1997266656, 4144548866, 3822293605, 3926602038, 1609713691, 2892681355, 3749833208,
            2219312564, 1687251603, 1588930279, 710521538, 1644589528, 4054199977, 1672634472,
            3997104967, 956657984, 1345800224, 3871498877, 1120533029, 4151694583, 3146989749,
            3919396264, 3231441052, 3162857783, 2091524393, 124782745, 1890937176, 4230835488,
            2323009602, 1051495796, 1,
        ],
        &[
            2429170498, 799964546, 2388325391, 317823710, 1840557881, 1282801560, 3546799442,
            457834840, 566997058, 2439965867, 3515007146, 3574214064, 4144082196, 3712070930,
            4088900464, 931383261, 170089945, 3405025888, 3812686020, 3504707725, 3656419747,
            3267430265, 3757212521, 606804174, 1643444794, 1555142733, 2148558239, 3200013733,
            3246813347, 347461213, 1,
        ],
        &[
            1131485172, 3765288921, 453666926, 1551065789, 1216395236, 2385231809, 2742879582,
            2426027378, 4167822390, 2229883144, 4228139351, 1293005830, 2665193524, 202666761,
            3531978819, 2231355982, 1235148096, 3915389935, 1798246474, 1563880136, 2945683561,
            1359457669, 1027112316, 3946769090, 4219178471, 794179363, 621594377, 2736938672,
            401053543, 1075392661, 1,
        ],
    );
    // x01_sign first
    // t0_sign second
    // x01_sign second
    // x11_sign second
    // t0_sign third
    test(
        13,
        &[
            1025572927, 4037308532, 206447616, 1333004461, 2310395791, 2869951650, 3992227745,
            2130697188, 3157273254, 1749550525, 2868602361, 3060642701, 2426631225, 1974455379,
            2987014830, 3508635696, 4024076244, 1755792892, 787921452, 4166340149, 3450397006,
            1108082683, 457400481, 879113144, 70830365, 2916933914, 2341310905, 851535845,
            216319323,
        ],
        &[
            69731978, 32563822, 946916236, 4016159116, 1224868021, 1718595702, 3605404890,
            1865781628, 1881971935, 1029571366, 841091130, 1677586018, 810666231, 2272746683,
            422109939, 1896472571, 3472541307, 1431848293, 116371044, 608472959, 213411238,
            4154745720, 3801332950, 4224350156, 448206049, 1568183327, 3637228341, 3718344479,
            2263647818,
        ],
        &[
            3460082903, 1733690143, 3780228761, 375677842, 1691069946, 689934922, 2437077094,
            3214349377, 2429121920, 653102152, 649867420, 921104070, 4125433869, 2564034244,
            2631897297, 1501813458, 3052965366, 2782742208, 4166256185, 995218213, 2136996300,
            710550319, 2748268062, 846266401, 385079156, 4270529993, 3575888617, 1142776416,
            876703144,
        ],
        &[
            3175747111, 594393429, 2604257881, 3289051141, 2317754576, 2939871916, 3748706204,
            1013852187, 3343723329, 930022353, 505449760, 486033689, 320591743, 2258238434,
            731770059, 3003208735, 1775573735, 3729639165, 3460733502, 3012496005, 1974364986,
            642896119, 3342553315, 3822794210, 229391052, 1989115715, 2908530532, 1629235212,
            297906894,
        ],
        &[
            2771639655, 2551822689, 1209354903, 2178693592, 1193377488, 793947593, 1366547443,
            2939017203, 963848668, 851106223, 1557851261, 997940551, 2665723642, 1647387186,
            2335120168,
        ],
        &[
            500011960, 1984266544, 857628644, 2215374614, 1925463875, 3051446098, 614991784,
            3952563722, 3226462656, 3978687345, 2589261427, 3942462520, 1207531315, 1120805743,
            1003360645,
        ],
        &[
            451008257, 2688612018, 4236929273, 890846394, 3566713276, 489065477, 715681827,
            3122623659, 3596792199, 1985137091, 2004754993, 1883145970, 1355971815, 187148563,
            3883316291,
        ],
        &[
            1364526373, 1859255461, 3407839641, 1532219679, 3952961366, 1871608475, 4041336906,
            3915677605, 4046491136, 2645312057, 1120032684, 1046405474, 1502799372, 4217018138,
            1023990345,
        ],
        &[
            570058979, 1182257372, 2005332174, 4070895605, 782477793, 360549018, 4128785555,
            3018190268, 2520343653, 2142831802, 2730358685, 1347549043, 898050628, 2236297907,
            3902264192, 3422936759, 3756013281, 352639804, 1061655526, 1986719339, 1128230524,
            2860027389, 1088162212, 2410209429, 3802902058, 2977799885, 3237963571, 2052297093, 0,
        ],
        &[
            1879768634, 2114652211, 1774713818, 554539813, 3731694105, 2702797297, 2844034165,
            2300392570, 1941578090, 3901846543, 983591421, 898885286, 822227747, 3851095686,
            2719131109, 3757259511, 2102411795, 1640921620, 3665191858, 2874213628, 2733705524,
            3691904983, 3823452407, 1169915867, 1621234879, 3630743707, 3478309891, 760168923, 0,
        ],
        &[
            3001545896, 250983613, 389728947, 3814529625, 1132206990, 1065795545, 2212114490,
            2023039590, 3597610210, 1780520334, 3734977828, 2468915322, 4140659688, 115504217,
            819490125, 2708811829, 3384020868, 1515546393, 3633787370, 1821986409, 2218993449,
            3207510568, 3670555307, 3845772841, 3486603021, 1022756175, 2686130697, 2532811595, 0,
        ],
        &[
            2918481451, 3610609934, 2847451215, 2220769302, 2338571396, 2165440207, 147236177,
            3730198517, 3208724339, 649659344, 1519241706, 1867099736, 1460711278, 2220689669,
            3279748484, 1549511341, 227389699, 855766629, 3771440986, 3432825737, 1053106079,
            1117588071, 1313153141, 571072082, 2914006120, 3516294505, 1320473469, 1040189722, 0,
        ],
    );
    // !x01_sign first && *xs01_lo_last != 0
    test(
        10,
        &[
            2010512066, 3816652533, 3172500500, 565989349, 3299472792, 2270934281, 1434273491,
            2883068162, 1560071521, 2704546576, 4072612274, 1051271061, 3502419446, 355770508,
            10573273, 270934222, 2810553666, 2643486939, 744991576, 1870415987, 2808955936,
        ],
        &[
            465514465, 2659174522, 3761352398, 3377965188, 1124434853, 3313355157, 619366950,
            3258308994, 2397177830, 4225454449, 3612285332, 2249675933, 913650729, 1455947505,
            2849031252, 3527524335, 2078373570, 3478300565, 3188941397, 3478789236, 3675330696,
        ],
        &[
            1404705627, 2788199838, 3229806456, 2206730708, 2050218206, 2991653989, 3066690310,
            3453635714, 3845109791, 627857052, 3843810702, 1520846308, 2495828552, 1637354383,
            2549944931, 3600368060, 108395402, 3341126373, 947408628, 2185962205, 1308735610,
        ],
        &[
            1053200638, 3763337935, 4268597333, 3193422669, 3607631108, 3846186640, 1111342197,
            552132609, 1307213459, 4257590159, 1367177524, 4201506028, 476759064, 680921272,
            2519538412, 238268545, 631677622, 549510100, 771370867, 3109499678, 1448324944,
        ],
        &[
            3267186431, 1424299202, 1039441915, 934588642, 50593817, 2147729982, 1547157070,
            1504136284, 1637263862, 4122900145,
        ],
        &[
            3236915806, 1590507024, 3040977659, 1225520269, 2190057676, 3504088852, 3648192167,
            1810940202, 83552157, 2321737355,
        ],
        &[
            4225004158, 590791745, 643591931, 3221398002, 1827972871, 1242243388, 2513726409,
            1495850896, 4192093161, 50221236,
        ],
        &[
            2036607814, 1957760917, 1453625187, 3689677164, 3487789049, 491100324, 1044724096,
            3399811921, 4055989690, 1295009692,
        ],
        &[
            3263538684, 120256485, 4060593063, 3438619735, 3929215534, 2588618000, 2277735492,
            1072816982, 3840198566, 1043147899, 1235395843, 4200415399, 3035243806, 1304983761,
            3872141601, 1404040725, 4044445427, 429312851, 3176929590, 2645604084, 0,
        ],
        &[
            4122626498, 107203592, 3628216803, 2047112948, 2210020383, 4096415682, 1367835443,
            2351498305, 4206740014, 996512353, 1147432853, 2660487268, 2975278601, 828643899,
            3534602756, 3189739581, 1167342346, 2278425545, 830131806, 2736051400, 0,
        ],
        &[
            2978640553, 1655222107, 3504154601, 1909395468, 3162278697, 2260916194, 3267701344,
            1089677643, 751892566, 4225581520, 2977844572, 882459562, 3829381149, 4213372565,
            1864175453, 3748132665, 2980365850, 1250882260, 3505860930, 652487710, 0,
        ],
        &[
            3447523550, 464011238, 1942725626, 1838669852, 3904733671, 258179587, 3703737903,
            1567067340, 3691418914, 1104958587, 1817293529, 2218949245, 4009018118, 2970219724,
            3485275615, 2079452863, 3685497725, 785093512, 267920582, 1623141509, 0,
        ],
    );
    // x01_sign != t0_sign
    test(
        11,
        &[
            105108810, 2939008753, 43370164, 1242908972, 1159070628, 84952645, 4165954274,
            906659711, 1019556239, 2534013318, 721285587, 1325925355, 1632336316, 4096108923,
            1763507067, 3809084118, 2331120351, 2754738494, 2103185448, 1244905580, 1907939448,
            2609958778, 730167872,
        ],
        &[
            2265464388, 1834541318, 2372682679, 3313972430, 3918258678, 2394770661, 1037415216,
            274650728, 3739985994, 2108171684, 2199795287, 566429532, 1157864107, 2882221652,
            910859296, 451698206, 2649007716, 1415208273, 2646592820, 3034704049, 2120666349,
            979747662, 322674205,
        ],
        &[
            3874939837, 1233304929, 106185835, 37158351, 2802916915, 3304535373, 696577680,
            3544731437, 3157476288, 1443616905, 3457867645, 4024841761, 4062836214, 2279777825,
            1482825076, 4078337234, 3264521275, 3344925347, 3161366177, 2196844487, 898054831,
            1438581672, 3352145698,
        ],
        &[
            1849881721, 2092152070, 2177899750, 288752532, 3618364405, 4141821358, 4158419895,
            2146161307, 3308429556, 282226456, 2214705611, 146486422, 1226466729, 2012446110,
            390251911, 3095301941, 1935278338, 1226998912, 102355086, 2004958092, 1379648599,
            833731447, 3784213054,
        ],
        &[
            1615644044, 2866597055, 1417092926, 358845179, 3417066108, 3643757328, 143514487,
            3323797767, 2638762718, 3254012295, 3018153021,
        ],
        &[
            344398095, 226628832, 764911662, 2701340611, 2699247769, 4219726262, 242800476,
            2930885037, 990361216, 3569632382, 93961188,
        ],
        &[
            129918839, 2214278271, 1283256165, 2817801381, 2615176815, 4126216685, 3082478432,
            3280512502, 1853758032, 2634521780, 4223054084,
        ],
        &[
            2590519092, 2716288017, 4272214574, 3155523983, 4104711693, 2762266943, 2745407059,
            2324276365, 326739968, 523560569, 396448235,
        ],
        &[
            3666666516, 547769313, 592311112, 2965277691, 3689426122, 853080706, 1356550839,
            4168566128, 1148520078, 939171181, 4015917617, 683222651, 4090232802, 3632973858,
            1439963708, 1600913535, 187292997, 1577612527, 1212140599, 1900670851, 2445225960,
            2669823530, 0,
        ],
        &[
            1687083814, 3698143323, 3751827194, 3866919242, 2549527161, 4010635967, 461515118,
            2688244606, 3320207170, 3619767327, 434459238, 4066444037, 3805779605, 3312610610,
            735569613, 11746680, 3083700477, 155975832, 1514885535, 1758738984, 2620267716,
            218832355, 0,
        ],
        &[
            3131789211, 3199129533, 2920949518, 53796216, 2859826242, 1820398479, 3973031721,
            2637151743, 3165657662, 2168050566, 1715646418, 2044422416, 1930311216, 3380875453,
            183533660, 2431952327, 2641905274, 4032322429, 1801301919, 3668108775, 2977500729,
            312563773, 1,
        ],
        &[
            1292086439, 3252628865, 3795724813, 3949296317, 3955675466, 2439424685, 4209245455,
            521673263, 3357923169, 728386653, 1761881489, 2103645314, 4058013613, 1659506293,
            3599632745, 96485170, 2801208662, 1691699790, 2077775599, 2126298157, 3250670933,
            280076983, 0,
        ],
    );
    // *xs01_lo_last != 0
    test(
        14,
        &[
            3187643652, 689861248, 4104971615, 2655959233, 1806333930, 2946646526, 716445782,
            1855643090, 2911585605, 2840897284, 772165124, 4249869367, 2223216112, 535376700,
            620340444, 1645897591, 1333985741, 730570397, 4160730534, 1246271990, 1725573135,
            352253863, 1262570932, 1984889896, 2956051954,
        ],
        &[
            3195311878, 3038033431, 2773970346, 1168697958, 2813281967, 746268626, 2691595086,
            4097287295, 93455850, 492512747, 2710035977, 1223679950, 3946316915, 3578566691,
            2992317089, 3174913905, 2131559101, 1331916743, 3949213449, 80715282, 158737627,
            2988488283, 2028980419, 3830004661, 250424958,
        ],
        &[
            2536403826, 384848984, 1774521292, 2718320818, 310873769, 2046298166, 3228810082,
            1178726899, 1925709392, 178731159, 2832365355, 2836635324, 193074416, 728452613,
            3469205214, 1514937172, 3814853496, 2161355055, 886569678, 4161288761, 2889870661,
            76946453, 1878702060, 1850975782, 1627735969,
        ],
        &[
            1725052145, 898802704, 776971836, 1219924401, 4224517976, 84598208, 2148547128,
            3866703857, 1192216635, 3270964370, 3470989137, 4065537602, 3771846191, 3811480941,
            4062031618, 3552276638, 1926982962, 297558461, 1000365546, 1422440944, 3161036166,
            519129014, 2412823237, 2742512283, 1294289799,
        ],
        &[
            2124565348, 1850594425, 684081640, 3059091438, 3756365771, 3723911794, 1430887131,
            2186106443, 1678377466, 1963700876,
        ],
        &[
            1786516080, 1799763022, 3244164991, 2583605118, 2016537122, 396228546, 1776124622,
            3149228799, 3618737851, 3722388678,
        ],
        &[
            2119342743, 2442803683, 2913523155, 2290813344, 2341544084, 2607906759, 3903931010,
            1623427068, 200668227, 866036225,
        ],
        &[
            154537600, 2783369274, 2784871905, 2923414066, 238748138, 894157397, 425890999,
            2023402367, 2708989084, 1773914772,
        ],
        &[
            714150426, 747474047, 711763591, 2505815901, 1931970168, 1830915645, 132011662,
            1641495062, 3649937934, 1578564850, 2879358541, 2256534044, 375624512, 402134451,
            124437205, 2656206024, 3918226432, 2934327023, 2861387419, 1259632526, 168082530,
            1906995676, 1276986866, 966360812, 0,
        ],
        &[
            2584563904, 501423603, 3179309343, 2650015179, 1354929902, 930009290, 4239032359,
            315773096, 1219190592, 1141774901, 2074216575, 279450192, 2450874439, 247131610,
            26955632, 3117135685, 2632739337, 2367699203, 1269501214, 837130129, 824399760,
            1192414122, 2569424753, 1942029336, 0,
        ],
        &[
            2166600367, 3206417308, 2873245177, 3181806685, 47762280, 4077132431, 3414741771,
            595567128, 1650380454, 3351739639, 1204748131, 4239748557, 4216796226, 1580325602,
            2295006359, 928145182, 2501406243, 2685614796, 1481907821, 3500619179, 3653788019,
            2099044319, 251730683, 1101601776, 0,
        ],
        &[
            327036000, 3129689357, 722252402, 3256719743, 762583270, 1730383711, 2418392723,
            3837009731, 993829843, 531209884, 2056099111, 2266372736, 1988906408, 2154603398,
            2683386624, 826004386, 3819045504, 3703296261, 2407207875, 3346505456, 2182410563,
            1915488498, 41659158, 2205564200, 0,
        ],
    );
}

#[test]
fn test_gcd() {
    let test = |s, t, out| {
        let u = Natural::from_str(s).unwrap();
        let v = Natural::from_str(t).unwrap();

        let mut n = u.clone();
        n.gcd_assign(v.clone());
        assert_eq!(n.to_string(), out);
        assert!(n.is_valid());

        let mut n = u.clone();
        n.gcd_assign(&v);
        assert_eq!(n.to_string(), out);
        assert!(n.is_valid());

        let n = u.clone().gcd(v.clone());
        assert_eq!(n.to_string(), out);
        assert!(n.is_valid());

        let n = (&u).gcd(v.clone());
        assert_eq!(n.to_string(), out);
        assert!(n.is_valid());

        let n = u.clone().gcd(&v);
        assert_eq!(n.to_string(), out);
        assert!(n.is_valid());

        let n = (&u).gcd(&v);
        assert_eq!(n.to_string(), out);
        assert!(n.is_valid());

        let n = BigUint::from_str(s)
            .unwrap()
            .gcd(&BigUint::from_str(t).unwrap());
        assert_eq!(n.to_string(), out);

        let n = rug::Integer::from_str(s)
            .unwrap()
            .gcd(&rug::Integer::from_str(t).unwrap());
        assert_eq!(n.to_string(), out);
    };
    test("0", "0", "0");
    test("0", "6", "6");
    test("6", "0", "6");
    test("1", "6", "1");
    test("6", "1", "1");
    test("8", "12", "4");
    test("54", "24", "6");
    test("42", "56", "14");
    test("48", "18", "6");
    test("3", "5", "1");
    test("12", "60", "12");
    test("12", "90", "6");
    test("12345678987654321", "98765432123456789", "1");
    test("12345678987654321", "98765432123456827", "37");
}

#[test]
fn limbs_gcd_limb_properties() {
    let mut config = GenConfig::new();
    config.insert("mean_length_n", 32);
    config.insert("mean_stripe_n", 16 << Limb::LOG_WIDTH);
    unsigned_vec_unsigned_pair_gen_var_23::<Limb, Limb>().test_properties_with_config(
        &config,
        |(xs, y)| {
            let gcd = Natural::from(limbs_gcd_limb(&xs, y));
            let n = Natural::from_owned_limbs_asc(xs);
            assert_eq!((&n).gcd(Natural::from(y)), gcd);
            assert_eq!(gcd_binary_nz(n, Natural::from(y)), gcd);
        },
    );
}

#[test]
fn half_gcd_matrix_init_properties() {
    unsigned_gen_var_11().test_properties_with_limit(TINY_LIMIT, |n| {
        let scratch_len = HalfGcdMatrix::min_init_scratch(n);
        assert_eq!(
            half_gcd_matrix_to_naturals(&HalfGcdMatrix::init(n, vec![0; scratch_len])),
            (Natural::ONE, Natural::ZERO, Natural::ZERO, Natural::ONE)
        );
    });
}

#[test]
fn half_gcd_matrix_update_q_properties() {
    let mut config = GenConfig::new();
    config.insert("mean_length_n", 32);
    config.insert("mean_stripe_n", 16 << Limb::LOG_WIDTH);
    large_type_gen_var_5().test_properties_with_config(&config, |(mut m, qs, column)| {
        let (x00, x01, x10, x11) = half_gcd_matrix_to_naturals(&m);
        let mut scratch = vec![0; HalfGcdMatrix::update_q_scratch_len(&m, qs.len())];
        m.update_q(&qs, column, &mut scratch);
        let q = Natural::from_owned_limbs_asc(qs);
        let (y00, y01, y10, y11) = half_gcd_matrix_to_naturals(&m);
        if column == 0 {
            assert_eq!(y01, x01);
            assert_eq!(y11, x11);
            assert_eq!(y00, &x00 + x01 * &q);
            assert_eq!(y10, &x10 + x11 * &q);
        } else {
            assert_eq!(y00, x00);
            assert_eq!(y10, x10);
            assert_eq!(y01, &x01 + x00 * &q);
            assert_eq!(y11, &x11 + x10 * &q);
        }
    });
}

#[test]
fn half_gcd_matrix_mul_matrix_1_properties() {
    let mut config = GenConfig::new();
    config.insert("mean_length_n", 32);
    config.insert("mean_stripe_n", 16 << Limb::LOG_WIDTH);
    large_type_gen_var_7().test_properties_with_config(&config, |(mut m, m_1)| {
        let (x00, x01, x10, x11) = half_gcd_matrix_to_naturals(&m);
        let (y00, y01, y10, y11) = half_gcd_matrix_1_to_naturals(&m_1);
        let mut scratch = vec![0; m.n];
        m.mul_matrix_1(&m_1, &mut scratch);
        let (z00, z01, z10, z11) = half_gcd_matrix_to_naturals(&m);
        assert_eq!(z00, &x00 * &y00 + &x01 * &y10);
        assert_eq!(z01, x00 * &y01 + x01 * &y11);
        assert_eq!(z10, &x10 * y00 + &x11 * y10);
        assert_eq!(z11, x10 * y01 + x11 * y11);
    });
}

#[test]
fn half_gcd_matrix_1_mul_vector_properties() {
    let mut config = GenConfig::new();
    config.insert("mean_length_n", 32);
    config.insert("mean_stripe_n", 16 << Limb::LOG_WIDTH);
    large_type_gen_var_6().test_properties_with_config(&config, |(m, mut out, xs, mut ys)| {
        let old_out = out.to_vec();
        let old_ys = ys.to_vec();
        let n = xs.len();
        let a = Natural::from_limbs_asc(&xs);
        let b = Natural::from_limbs_asc(&ys[..n]);
        let out_len = m.mul_vector(&mut out, &xs, &mut ys);
        let bits = (u64::exact_from(n) + 1) << Limb::LOG_WIDTH;
        assert_eq!(
            Natural::from_limbs_asc(&out[..out_len]),
            (&a * Natural::from(m.data[0][0]) + &b * Natural::from(m.data[1][0]))
                .mod_power_of_2(bits)
        );
        assert_eq!(
            Natural::from_limbs_asc(&ys[..out_len]),
            (a * Natural::from(m.data[0][1]) + b * Natural::from(m.data[1][1]))
                .mod_power_of_2(bits)
        );
        if out.len() > out_len {
            assert_eq!(&out[out_len + 1..], &old_out[out_len + 1..]);
        }
        if ys.len() > out_len {
            assert_eq!(&ys[out_len + 1..], &old_ys[out_len + 1..]);
        }
    });
}

#[test]
fn limbs_matrix_2_2_mul_properties() {
    let mut config = GenConfig::new();
    config.insert("mean_length_n", 32);
    config.insert("mean_stripe_n", 16 << Limb::LOG_WIDTH);
    large_type_gen_var_8().test_properties_with_config(
        &config,
        |(mut xs00, mut xs01, mut xs10, mut xs11, xs_len, ys00, ys01, ys10, ys11)| {
            let x00 = Natural::from_limbs_asc(&xs00[..xs_len]);
            let x01 = Natural::from_limbs_asc(&xs01[..xs_len]);
            let x10 = Natural::from_limbs_asc(&xs10[..xs_len]);
            let x11 = Natural::from_limbs_asc(&xs11[..xs_len]);
            let mut scratch = vec![0; limbs_matrix_mul_2_2_scratch_len(xs_len, ys00.len())];
            limbs_matrix_2_2_mul(
                &mut xs00,
                &mut xs01,
                &mut xs10,
                &mut xs11,
                xs_len,
                &ys00,
                &ys01,
                &ys10,
                &ys11,
                &mut scratch,
            );
            let y00 = Natural::from_owned_limbs_asc(ys00);
            let y01 = Natural::from_owned_limbs_asc(ys01);
            let y10 = Natural::from_owned_limbs_asc(ys10);
            let y11 = Natural::from_owned_limbs_asc(ys11);
            let z00 = Natural::from_owned_limbs_asc(xs00);
            let z01 = Natural::from_owned_limbs_asc(xs01);
            let z10 = Natural::from_owned_limbs_asc(xs10);
            let z11 = Natural::from_owned_limbs_asc(xs11);
            assert_eq!(z00, &x00 * &y00 + &x01 * &y10);
            assert_eq!(z01, x00 * &y01 + x01 * &y11);
            assert_eq!(z10, &x10 * y00 + &x11 * y10);
            assert_eq!(z11, x10 * y01 + x11 * y11);
        },
    );
}

fn gcd_properties_helper(x: Natural, y: Natural) {
    let gcd_val_val = x.clone().gcd(y.clone());
    let gcd_val_ref = x.clone().gcd(&y);
    let gcd_ref_val = (&x).gcd(y.clone());
    let gcd = (&x).gcd(&y);
    assert!(gcd_val_val.is_valid());
    assert!(gcd_val_ref.is_valid());
    assert!(gcd_ref_val.is_valid());
    assert!(gcd.is_valid());
    assert_eq!(gcd_val_val, gcd);
    assert_eq!(gcd_val_ref, gcd);
    assert_eq!(gcd_ref_val, gcd);

    let mut mut_x = x.clone();
    mut_x.gcd_assign(y.clone());
    assert!(mut_x.is_valid());
    assert_eq!(mut_x, gcd);

    let mut mut_x = x.clone();
    mut_x.gcd_assign(&y);
    assert_eq!(mut_x, gcd);
    assert!(mut_x.is_valid());

    assert_eq!(
        biguint_to_natural(&(natural_to_biguint(&x).gcd(&natural_to_biguint(&y)))),
        gcd
    );
    assert_eq!(
        rug_integer_to_natural(&(natural_to_rug_integer(&x).gcd(&natural_to_rug_integer(&y)))),
        gcd
    );

    assert_eq!(gcd_euclidean_nz(x.clone(), y.clone()), gcd);
    assert_eq!(gcd_binary_nz(x.clone(), y.clone()), gcd);

    assert_eq!((&y).gcd(&x), gcd);
    assert!((&x).divisible_by(&gcd));
    assert!((&y).divisible_by(&gcd));
    assert_eq!(gcd == 0, x == 0 && y == 0);
    if gcd != 0 {
        assert!(((&x).div_exact(&gcd)).coprime_with((&y).div_exact(&gcd)));
    }
    if x != 0 && y != 0 {
        assert_eq!(&x * &y / x.lcm(y), gcd);
    }
}

#[test]
fn gcd_properties() {
    natural_pair_gen().test_properties(|(x, y)| {
        gcd_properties_helper(x, y);
    });

    natural_pair_gen_var_4().test_properties(|(x, y)| {
        gcd_properties_helper(x, y);
    });

    natural_gen().test_properties(|x| {
        assert_eq!((&x).gcd(&x), x);
        assert_eq!((&x).gcd(Natural::ONE), 1);
        assert_eq!((&x).gcd(Natural::ZERO), x);
    });

    natural_triple_gen().test_properties(|(x, y, z)| {
        assert_eq!((&x).gcd(&y).gcd(&z), x.gcd(y.gcd(z)));
    });

    unsigned_pair_gen_var_27::<Limb>().test_properties(|(x, y)| {
        assert_eq!(Natural::from(x).gcd(Natural::from(y)), x.gcd(y));
    });
}
