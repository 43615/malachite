use num::random::random_unsigneds_less_than;
use random::random_values_from_slice::RandomValuesFromSlice;
use random::random_values_from_vec::RandomValuesFromVec;
use random::seed::Seed;

/// This seed was generated by random.org.
pub const EXAMPLE_SEED: Seed = Seed::from_bytes([
    0xbf, 0x18, 0x11, 0xce, 0x15, 0xee, 0xfd, 0x20, 0x2f, 0xdf, 0x67, 0x6a, 0x6b, 0xba, 0xaf, 0x04,
    0xff, 0x71, 0xe0, 0xf8, 0x0b, 0x2a, 0xcf, 0x27, 0x85, 0xb3, 0x32, 0xc6, 0x20, 0x80, 0x5e, 0x36,
]);

#[inline]
pub fn random_values_from_slice<T>(seed: Seed, xs: &[T]) -> RandomValuesFromSlice<T> {
    RandomValuesFromSlice {
        xs,
        indices: random_unsigneds_less_than(seed, xs.len()),
    }
}

#[inline]
pub fn random_values_from_vec<T: Clone>(seed: Seed, xs: Vec<T>) -> RandomValuesFromVec<T> {
    let indices = random_unsigneds_less_than(seed, xs.len());
    RandomValuesFromVec { xs, indices }
}

pub mod random_values_from_slice;
pub mod random_values_from_vec;
pub mod seed;
