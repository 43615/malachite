use malachite_base_test_util::runner::Runner;

pub(crate) fn register(runner: &mut Runner) {
    add::register(runner);
    add_mul::register(runner);
    checked_sub::register(runner);
    checked_sub_mul::register(runner);
    coprime_with::register(runner);
    div::register(runner);
    div_exact::register(runner);
    div_mod::register(runner);
    div_round::register(runner);
    divisible_by::register(runner);
    divisible_by_power_of_2::register(runner);
    eq_mod::register(runner);
    eq_mod_power_of_2::register(runner);
    gcd::register(runner);
    is_power_of_2::register(runner);
    lcm::register(runner);
    log_base::register(runner);
    log_base_2::register(runner);
    log_base_power_of_2::register(runner);
    mod_add::register(runner);
    mod_is_reduced::register(runner);
    mod_mul::register(runner);
    mod_neg::register(runner);
    mod_op::register(runner);
    mod_pow::register(runner);
    mod_power_of_2::register(runner);
    mod_power_of_2_add::register(runner);
    mod_power_of_2_is_reduced::register(runner);
    mod_power_of_2_mul::register(runner);
    mod_power_of_2_neg::register(runner);
    mul::register(runner);
    neg::register(runner);
    root::register(runner);
    sqrt::register(runner);
}

mod add;
mod add_mul;
mod checked_sub;
mod checked_sub_mul;
mod coprime_with;
mod div;
mod div_exact;
mod div_mod;
mod div_round;
mod divisible_by;
mod divisible_by_power_of_2;
mod eq_mod;
mod eq_mod_power_of_2;
mod gcd;
mod is_power_of_2;
mod lcm;
mod log_base;
mod log_base_2;
mod log_base_power_of_2;
mod mod_add;
mod mod_is_reduced;
mod mod_mul;
mod mod_neg;
mod mod_op;
mod mod_pow;
mod mod_power_of_2;
mod mod_power_of_2_add;
mod mod_power_of_2_is_reduced;
mod mod_power_of_2_mul;
mod mod_power_of_2_neg;
mod mul;
mod neg;
mod root;
mod sqrt;
