use malachite_base::num::arithmetic::traits::{EqModPowerOfTwo, ModPowerOfTwo};
use malachite_base::num::basic::integers::PrimitiveInteger;
use malachite_base::num::conversion::traits::WrappingFrom;
use malachite_nz::integer::Integer;
use malachite_nz::natural::arithmetic::div_exact::{
    _limbs_modular_div_mod_divide_and_conquer, _limbs_modular_div_mod_schoolbook,
    _limbs_modular_div_schoolbook,
};
#[cfg(feature = "32_bit_limbs")]
use malachite_nz::natural::arithmetic::div_exact_limb::limbs_modular_invert_limb;
use malachite_nz::natural::Natural;
use malachite_nz::platform::Limb;

use common::{test_properties, test_properties_custom_scale};
use malachite_test::inputs::base::{
    quadruples_of_three_unsigned_vecs_and_unsigned_var_3,
    quadruples_of_three_unsigned_vecs_and_unsigned_var_4,
    quadruples_of_three_unsigned_vecs_and_unsigned_var_5,
};

fn verify_limbs_modular_div_mod(ns: &[Limb], ds: &[Limb], borrow: bool, qs: &[Limb], rs: &[Limb]) {
    let n = Natural::from_limbs_asc(ns);
    let d = Natural::from_limbs_asc(ds);
    let q = Natural::from_limbs_asc(qs);
    let r = Natural::from_limbs_asc(rs);
    let n_len = ns.len();
    let d_len = ds.len();
    let q_len = n_len - d_len;
    let qd = q * d;
    assert_eq!(n < qd, borrow);
    assert!(qd.eq_mod_power_of_two(&n, u64::wrapping_from(q_len) << Limb::LOG_WIDTH));
    let expected_r = (Integer::from(n) - Integer::from(qd))
        .mod_power_of_two(u64::wrapping_from(n_len) << Limb::LOG_WIDTH)
        >> (u64::wrapping_from(q_len) << Limb::LOG_WIDTH);
    assert_eq!(expected_r, r, "{:?}, {:?}", ns, ds);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_limbs_modular_div_mod_schoolbook() {
    let test =
        |qs_in: &[Limb], ns_in: &[Limb], ds: &[Limb], borrow, qs_out: &[Limb], ns_out: &[Limb]| {
            let mut qs = qs_in.to_vec();
            let mut ns = ns_in.to_vec();
            let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
            assert_eq!(
                _limbs_modular_div_mod_schoolbook(&mut qs, &mut ns, ds, inverse),
                borrow
            );
            let q_len = ns.len() - ds.len();
            assert_eq!(&qs[..q_len], qs_out);
            assert_eq!(&ns[q_len..], ns_out);
            verify_limbs_modular_div_mod(ns_in, ds, borrow, qs_out, ns_out);
        };
    // lowest_q && limbs_slice_add_limb_in_place(&mut qs[q_diff..], 1)
    test(&[10; 3], &[0, 0, 0], &[1, 2], false, &[0], &[0, 0]);
    // !(lowest_q && limbs_slice_add_limb_in_place(&mut qs[q_diff..], 1))
    test(&[10; 3], &[1, 2, 3], &[1, 2], false, &[1], &[0, 3]);
    test(
        &[10; 3],
        &[1, 2, 3],
        &[5, 6],
        true,
        &[3435973837],
        &[858993456, 4294967294],
    );
    test(&[10; 3], &[1, 2, 3, 4], &[1, 2, 3], false, &[1], &[0, 0, 4]);
    test(
        &[10; 3],
        &[1, 2, 3, 4],
        &[1, 0xffff_ffff, 3],
        false,
        &[1],
        &[3, 4294967295, 3],
    );
    test(&[10; 3], &[0, 1], &[1], false, &[0], &[1]);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_schoolbook_fail_1() {
    _limbs_modular_div_mod_schoolbook(&mut [10; 3], &mut [1, 2, 3], &[], 1);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_schoolbook_fail_2() {
    let ds = &[1, 2, 3];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_mod_schoolbook(&mut [10; 3], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_schoolbook_fail_3() {
    let ds = &[1, 2];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_mod_schoolbook(&mut [], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_schoolbook_fail_4() {
    let ds = &[4, 5];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_mod_schoolbook(&mut [10; 3], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_limbs_modular_div_mod_divide_and_conquer() {
    let test =
        |qs_in: &[Limb], ns_in: &[Limb], ds: &[Limb], borrow, qs_out: &[Limb], ns_out: &[Limb]| {
            let mut qs = qs_in.to_vec();
            let mut ns = ns_in.to_vec();
            let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
            assert_eq!(
                _limbs_modular_div_mod_divide_and_conquer(&mut qs, &mut ns, ds, inverse),
                borrow
            );
            let q_len = ns.len() - ds.len();
            assert_eq!(&qs[..q_len], qs_out);
            assert_eq!(&ns[q_len..], ns_out);
            verify_limbs_modular_div_mod(ns_in, ds, borrow, qs_out, ns_out);
        };
    // q_len <= d_len
    // q_len < DC_BDIV_QR_THRESHOLD
    // q_len != d_len
    test(&[10; 3], &[0, 0, 0], &[1, 2], false, &[0], &[0, 0]);
    test(&[10; 3], &[1, 2, 3], &[1, 2], false, &[1], &[0, 3]);
    test(
        &[10; 3],
        &[1, 2, 3],
        &[5, 6],
        true,
        &[3435973837],
        &[858993456, 4294967294],
    );
    test(&[10; 3], &[1, 2, 3, 4], &[1, 2, 3], false, &[1], &[0, 0, 4]);
    test(
        &[10; 3],
        &[1, 2, 3, 4],
        &[1, 0xffff_ffff, 3],
        false,
        &[1],
        &[3, 4294967295, 3],
    );
    // q_len == d_len
    test(&[10; 4], &[0; 4], &[1, 0], false, &[0, 0], &[0, 0]);
    // q_len > d_len
    // q_len_mod_d_len < DC_BDIV_QR_THRESHOLD
    // q_len_mod_d_len != d_len
    // lo < DC_BDIV_QR_THRESHOLD in _limbs_modular_div_mod_divide_and_conquer_helper
    // hi < DC_BDIV_QR_THRESHOLD in _limbs_modular_div_mod_divide_and_conquer_helper
    test(&[10; 5], &[0; 5], &[1, 0], false, &[0, 0, 0], &[0, 0]);
    test(
        &[10; 4],
        &[1, 2, 3, 4],
        &[5, 6],
        true,
        &[3435973837, 3607772528],
        &[4123168602, 4294967294],
    );
    test(
        &[10; 5],
        &[1, 2, 3, 4, 5],
        &[7, 8, 9],
        false,
        &[3067833783, 175304787],
        &[1051828726, 2717224210, 4],
    );
    // q_len_mod_d_len == d_len
    test(
        &[10; 6],
        &[1, 2, 3, 4, 5, 6],
        &[7, 8],
        false,
        &[3067833783, 175304787, 3481052211, 2770888938],
        &[3602692266, 0],
    );
    // q_len >= DC_BDIV_QR_THRESHOLD
    test(
        &[10; 111],
        &[
            238690007, 851362023, 2059930942, 863267985, 3076614342, 3047275605, 1421974480,
            393459707, 388753961, 1307811244, 1724185886, 1342073382, 3451829757, 511726014,
            460409053, 863948559, 755242682, 1610976003, 1095233439, 3983048866, 3486643678,
            1487854845, 1830823553, 2167088595, 2000609352, 3778875209, 1877274219, 3295032048,
            1477159538, 2048839778, 1451455912, 2109980052, 1750913495, 391343357, 3276142698,
            2641970441, 1571798863, 2401599044, 1467594428, 2128234517, 3438746006, 227485655,
            15222216, 256928874, 3095411638, 111550405, 2230139158, 531435393, 1299420097,
            783687022, 3432104224, 1656185186, 3410451479, 1448536986, 1411134389, 3874476101,
            2765514254, 2128294132, 3954579563, 2329369626, 3269515791, 3855344744, 1503334643,
            1671855141, 3162383277, 1731111055, 3777334519, 1174367318, 1945392580, 966689109,
            97441364, 1465255424, 1616147497, 1637231485, 1811763876, 2884209513, 3019238075,
            1328651869, 840247524, 344122022, 795760234, 289967503, 616630287, 675829910,
            2847875873, 2811380606, 2236228680, 4067593481, 2980091801, 2832971103, 2491091113,
            1521816576, 4075571575, 2543360203, 935927249, 573194417, 1822073845, 1839465906,
            3275095514,
        ],
        &[
            2515301847, 3904775757, 133728302, 3903482605, 3523183307, 1531057916, 1011111105,
            1204888196, 587552558, 2259844136, 2514432920, 3885615695, 1529240459, 2527102686,
            1527502935, 3607833032, 3108651811, 1015333242, 2650209133, 499583440, 2106087248,
            3218570602, 187468843, 2524810763, 3875472062, 3825849708, 2963555251, 2365237686,
            2035410556, 3853326592, 2366649615, 757846500, 2808712542, 1010450631, 2537107077,
            415304475, 2322781433, 1747200466, 3029815769, 2722060855, 3586580760, 2610036947,
            2383069225, 1479189021, 3488202013, 3088351671, 2313154907, 1103886425, 3716175621,
            1172908513,
        ],
        false,
        &[
            3119021825, 2664508330, 2031628331, 478764351, 1877838675, 14612131, 652799697,
            1178144318, 581220955, 1647659598, 1352407033, 2397453730, 3102518439, 248362411,
            760583238, 3183702428, 3503543471, 1633363102, 700510731, 2278494661, 3883161292,
            2875693392, 778768718, 1830608772, 4092108024, 1084731936, 2636788137, 1618403943,
            2120905188, 1304331644, 3129515489, 1701146314, 2248764147, 4096904357, 4179132986,
            1285739406, 4084818677, 3908907080, 2892808133, 3130632865, 1541722253, 754313201,
            49163159, 4048683373, 1840022468, 3666703478, 149207896, 1807686489, 529174445,
        ],
        &[
            222246482, 233545700, 3332794578, 1998197261, 3881642604, 2334420680, 457729581,
            1028684141, 1820939861, 393050552, 3364087427, 980919077, 215964517, 2941392816,
            735903426, 707494399, 1663858662, 1254976633, 2324830169, 279707711, 2388586745,
            1736265304, 1292267389, 1204103850, 1444415893, 646068967, 361893912, 1168453387,
            4162569836, 37496928, 2388108126, 4045054107, 479165313, 2859008180, 3729669518,
            790583185, 1990610890, 653432721, 4260517455, 1533264118, 4071210056, 1925491571,
            2468006372, 1418208775, 3998441757, 2911027604, 1743255069, 4051022203, 3853317804,
            3130583770,
        ],
    );
    // q_len_mod_d_len >= DC_BDIV_QR_THRESHOLD
    test(
        &[10; 172],
        &[
            119338358, 2430782482, 2540297421, 188973918, 3420087589, 1543598052, 1550450700,
            3792047461, 889269407, 501191530, 2576798720, 2543454220, 3210031718, 485123386,
            106926418, 550954803, 939577053, 4245574922, 3198319089, 3116005666, 2750993558,
            1870348975, 1975807411, 1781898658, 487257459, 1417798881, 2833805593, 3259853663,
            1497754962, 686849710, 2609757048, 3718757183, 57671149, 3248634542, 3521889134,
            4157073590, 177642810, 2320627206, 3417728001, 301744109, 1374315478, 1156075184,
            2442293407, 1057610827, 1297359181, 1747109539, 2141404099, 4281881065, 138386125,
            3063455685, 3257890728, 3858193084, 3304890228, 238881307, 3445664438, 1185407578,
            2888653737, 993706894, 1967766053, 127412966, 2403399672, 1285486798, 908290107,
            1510442679, 4206401596, 3276759710, 11374285, 3959337953, 2236839585, 1565413293,
            2800534730, 3519885942, 3614906874, 2633795417, 3347806654, 569358328, 2189946218,
            1203262343, 2746982062, 62980684, 2586441066, 3124531637, 2381648646, 105584535,
            2941906813, 4638308, 3536520384, 446015359, 345521288, 2337847433, 1716341197,
            3434262596, 327360947, 2195093682, 1901891799, 2053064947, 1866727148, 1933602442,
            1896991511, 2434864863, 2509221232, 4146560978, 1738009642, 1186271375, 1991440446,
            388280769, 169881608, 3374872656, 4866502, 1578994123, 3894433257, 1685621086,
            3090617712, 2446643244, 1027311466, 2913067733, 415217914, 206402492, 3701056394,
            1797709466, 3451818053, 648910037, 1949755852, 3049709007, 1611096612, 271402178,
            2578204568, 481131710, 1944796007, 2365170803, 32134309, 3750170475, 1864104146,
            3460592883, 1303514890, 1133731290, 3830118297, 591382459, 3363797689, 3707044033,
            3781009395, 1183270231, 3773122255, 3243748324, 3121647216, 3297073440,
        ],
        &[
            1049478211, 680469795, 747349000, 2496192539, 3157275628, 2809929985, 1340573873,
            2369546793, 2965031816, 1069643167, 3522649492, 82508657, 3745222809, 2653443896,
            2691224863, 3638169243, 2790760129, 4050384292, 1236545914, 17769303, 3123357666,
            3308586064, 230925596, 2288243675, 526850016, 3478799166, 1359885289, 375398501,
            1996193928, 224867464, 3724522919, 3776621157, 1721777221, 1941498131, 1319934893,
            335479091, 1206826435, 1008537741, 2525891651, 3027900562, 4088218789, 1755627645,
            2151342900, 1492538444, 3337655012, 1349454, 757064511, 1793808978, 1243123906,
        ],
        false,
        &[
            3523610706, 4095718486, 1445432431, 1673437541, 4020367945, 3745015492, 3016399130,
            2189565108, 2158132813, 1848828598, 2472767424, 878094830, 2680402548, 1260943793,
            2476928489, 1177867634, 1646518182, 2946352334, 2967411271, 795570707, 2492588175,
            1099595857, 2363747444, 2197221897, 2821893422, 2883961834, 3448280420, 786023016,
            2349590684, 2639964406, 1547208182, 3946067756, 3185616768, 3182946836, 2191883192,
            714873272, 792265815, 933013306, 2758420490, 3469512009, 2749660816, 1740114201,
            1648303579, 1226176719, 4026247645, 894127522, 574096753, 1891430834, 2973532085,
            944441129, 1683821712, 681573051, 3596769123, 1196189501, 2202034777, 1230292795,
            3495428083, 3349595990, 3089151840, 3902324247, 1824847451, 783543484, 3845016445,
            1815687272, 3454243, 2400067141, 2812607721, 1192925916, 2545803688, 4259913124,
            2525790266, 1603659073, 2954188152, 3220648056, 4024945180, 1854165635, 2161271037,
            517485723, 3238095654, 89843703, 3273382586, 3798028954, 1204973927, 2456421551,
            1909094133, 2001850210, 3332598500, 2971871953, 2353788999, 1241071170, 422153499,
            3611758239, 1771812426, 1704380646, 2934602124, 2834187644, 518477462,
        ],
        &[
            266027871, 609493494, 1199784782, 1682700206, 4164056974, 2244647064, 14359526,
            1914376228, 1643693158, 449364942, 41001758, 2790190796, 1578020376, 30923228,
            2290083886, 793751679, 3951462642, 4187532857, 4144262715, 2260802306, 203413221,
            3707574023, 576327919, 33186882, 2830664220, 3895250804, 3878634772, 2739709544,
            1332976664, 1238738498, 2733771934, 2370719463, 1598734028, 1315681082, 1037147578,
            3551458133, 3406603032, 2882741411, 196631076, 833893415, 1307502306, 2956084628,
            3466863337, 682644819, 4092006006, 1963236296, 154386710, 1982810036, 3147006703,
        ],
    );
    // lo >= DC_BDIV_QR_THRESHOLD in _limbs_modular_div_mod_divide_and_conquer_helper
    // hi >= DC_BDIV_QR_THRESHOLD in _limbs_modular_div_mod_divide_and_conquer_helper
    test(
        &[10; 704],
        &[
            4185751770, 949164274, 3900519725, 1754790124, 2927570383, 1610053170, 3366859463,
            1066429707, 3501570618, 2367440639, 2328634068, 3704221588, 2322372141, 3380520853,
            4189820685, 485163788, 2195405920, 3117134592, 3277704486, 3921062791, 4106797055,
            3045508412, 661029638, 2678369724, 1467681615, 1851814983, 2960522150, 2294339994,
            489626124, 1242331300, 3385810062, 1149294828, 4088074806, 3724039365, 3770424399,
            2493469584, 806372748, 3771669403, 1111232705, 3478087568, 4029774748, 3551452116,
            3110587082, 2488974879, 47749858, 2223367929, 873250000, 2012398807, 1861118382,
            2706639555, 2880844104, 1868093092, 3743135694, 4074318903, 2930806087, 2281983526,
            1378855744, 3388340416, 3195092613, 3141388671, 3385803629, 2248154961, 716647719,
            408786065, 4189607626, 2706804476, 392451433, 843831220, 2117893506, 3763769755,
            2423989357, 1884254215, 4268634885, 1347756990, 4289680773, 1595972140, 1860322889,
            3365907154, 654256963, 3331834702, 3229143368, 1643589278, 3268087485, 3428966374,
            3734153935, 506918314, 2193830653, 1524006905, 2233546309, 2451094754, 983474066,
            1062775683, 1398440782, 617471652, 233856640, 1491439739, 194893774, 404597210,
            3349886938, 807897566, 1268209008, 3507741641, 434756682, 3067317419, 1955402334,
            3598337478, 4236902625, 3345914967, 2108259867, 4199783792, 3533374250, 690146057,
            2735070107, 3232842523, 3628050608, 139149260, 1670944793, 3256209787, 3411654393,
            1946511496, 2082461349, 2746160530, 1671886353, 2094620437, 1492520252, 3287026452,
            1499589769, 2631443030, 4265952385, 1560009101, 1665017895, 3582256582, 583800370,
            1971617104, 1393694131, 1717803931, 2118915823, 606443859, 76766530, 1028659200,
            3222396398, 491393514, 2650674330, 1420523709, 990196161, 4164467322, 955609751,
            3658315631, 3108133206, 2441918819, 119215334, 1647135728, 1151329712, 2270557882,
            2839636265, 1788114480, 953442631, 220077499, 3739679968, 289913489, 153493659,
            2215060199, 654989994, 2506760104, 3263600596, 2504124177, 3901175056, 3815693428,
            4062899928, 656080429, 1691317505, 2738892449, 2218799091, 254384726, 3472889999,
            452028418, 2323167132, 3160160509, 2790465254, 3506704767, 920776279, 1555295659,
            2088038090, 3587541031, 704460377, 41385058, 117178999, 3630755471, 2068346931,
            1737173706, 943790911, 1174415673, 2975257119, 4104946893, 563605415, 3504496607,
            3460311420, 3481281138, 2065638799, 222198878, 693087774, 2553540537, 3515067895,
            493992216, 2675820307, 1624273500, 537035998, 1538452403, 227298276, 566431973,
            3341420291, 2663602752, 849190806, 517998830, 674919319, 1319125805, 3230314450,
            889723668, 3312911398, 2040926687, 1551018220, 217350907, 1190271637, 2196470418,
            582739501, 574580675, 627521985, 3462620295, 1826546772, 1200183559, 2511667565,
            3321520722, 1760501936, 3401858303, 2056315825, 2956669134, 591282350, 2228097677,
            3953970187, 3763033846, 3981289762, 2843535951, 4035523339, 1074508115, 3233409639,
            314820046, 1519729781, 1729078105, 4201604342, 3380921403, 2184949152, 2897857848,
            212321156, 481361797, 3780255393, 2528871308, 2219779174, 3502413298, 2433932491,
            2088433048, 1119465465, 553056530, 2681509152, 1990025128, 4113937421, 757723844,
            4065055099, 1438167045, 1714067756, 295039437, 3553014346, 1500257339, 121711495,
            1299814419, 1481787451, 466462561, 3450349124, 3354633040, 4197116852, 2300067620,
            2300312798, 734816444, 668372087, 610325644, 1820480332, 312923552, 1371828336,
            386480792, 3231465004, 2119854347, 2503795939, 37544982, 2127724350, 3977310867,
            906274532, 3014798043, 1163507806, 39393504, 3203870929, 2603325424, 601940205,
            1446813021, 4008328844, 1129836361, 2242436794, 1108252363, 710998579, 3822246787,
            4245857572, 227662739, 3162273355, 2718012967, 512837928, 1146047591, 1624412382,
            4172642116, 2479791213, 2246659717, 2115301250, 144504796, 3097248580, 1488044443,
            3235358299, 310016185, 727752929, 3403555569, 1034814907, 572097587, 1799465727,
            3315327068, 1904601168, 1060041227, 95653066, 3179621384, 2784606474, 3635929233,
            3002198637,
        ],
        &[
            925120207, 4225173411, 773590203, 2705088909, 760018119, 3560986781, 3276778645,
            569879745, 275063826, 3553444079, 3591608936, 938243104, 3604596571, 1820901407,
            4022554834, 1440792481, 574650989, 3656262710, 4150032702, 1559596409, 3960538469,
            1809314494, 2152378256, 825148860, 2074258358, 2059483645, 3119970833, 3052492792,
            1083432735, 2994856903, 3287600147, 2502703055, 1752688956, 4149576868, 1709984301,
            3235915685, 487122947, 437538202, 3178502734, 1263854855, 135705911, 2843982074,
            4164166971, 4100829511, 3031022541, 3201076966, 1805387578, 1826440600, 557213027,
            2792934052, 2243352750, 1801883920, 3301321918, 469048417, 2725138727, 2947700289,
            1913798124, 574678647, 2000040094, 2336849657, 3912194680, 1616490328, 2363261019,
            3380210359, 2784609072, 835985245, 1062319853, 2519822447, 4185407058, 3253459482,
            3240288702, 3425190358, 3392304118, 3339858917, 227057671, 2117867538, 1238503500,
            1783611406, 1671436072, 4020871006, 3708283179, 1814419869, 2809845213, 402675383,
            700520900, 4021715245, 3864091313, 1886661387, 2898624118, 2266154557, 1538350152,
            4205425742, 2641391768, 3508390452, 202172288, 2270033614, 787751496, 4225843194,
            2087465714, 718749793, 4160365132, 121686135, 3232242907, 1290170166, 2696610438,
            2043913461, 2304403306,
        ],
        false,
        &[
            4221978630, 1973199499, 4118761517, 1280124308, 1169734844, 4186771056, 1549813668,
            2075241811, 3420909216, 3907043806, 2541993804, 282548280, 1975129143, 3336674855,
            4090776129, 2428071752, 3676342369, 3454430534, 316538936, 243907370, 2971927846,
            251436476, 2221794683, 2822328444, 528428056, 1993265952, 3040794479, 4050913221,
            2509817742, 2793009366, 3346235129, 4179770275, 1329386656, 3069305579, 422911051,
            232216774, 3312143191, 81270597, 779322188, 1011095209, 1055038871, 1975842925,
            1732790895, 733239904, 1557320335, 1710699531, 4221175046, 721245441, 2600219287,
            1818367711, 1883945801, 1722730504, 3667715777, 3514130820, 2079744029, 4097159692,
            8702783, 1634848318, 4003868364, 3189174634, 154328123, 3136083300, 1256793950,
            3908958390, 3995938868, 3505295673, 15682981, 1733079452, 2199765868, 1399865418,
            3931463027, 216129100, 1771409837, 4170117419, 2889309579, 1323366430, 3037738897,
            3024721374, 3698031352, 1843487639, 2640258708, 2514361590, 67538017, 3752890769,
            2377631023, 1117874819, 2034201383, 3233935115, 186520404, 1781753373, 2159589499,
            1457819895, 1955947342, 3294618852, 2583537479, 1780703679, 1295362239, 4288927730,
            3528770822, 290885828, 1022721043, 2379556752, 249111996, 1042924458, 3285072303,
            1799654769, 341780256, 2011707698, 4011728901, 4131230694, 243833190, 3438825130,
            732870287, 3977999178, 1964878050, 1772633237, 3427011489, 4149075167, 3147152113,
            4186542306, 3008212122, 2269822538, 2457396003, 2899887041, 3084745386, 2805864858,
            2636345155, 2806159180, 1448641497, 1724536998, 3602736476, 670315274, 821858587,
            3976166693, 1431302113, 994517893, 3205096696, 734083218, 684810460, 871706632,
            1619463495, 1943812284, 3232191634, 1688008439, 959671513, 861714098, 3632682856,
            4008579961, 1713155910, 621038709, 2171689707, 16974992, 1322572013, 3716365836,
            1503115330, 3655753010, 3148139022, 862756091, 2477797665, 1345732090, 2351929785,
            4244479677, 3338662555, 590731935, 3482514189, 1766212776, 1514121012, 3065000224,
            1126651654, 3402553599, 4032051831, 2997384063, 1732308544, 1185658163, 505658742,
            12068286, 191037370, 3820036984, 1808669698, 4025106072, 1258717124, 2996770408,
            104941276, 3293831485, 3303505858, 1959694112, 2104003029, 513795826, 682626035,
            1611502331, 165846820, 3906438907, 2655225469, 1304471424, 2263663116, 2896749335,
            2359126350, 2213606484, 1429710281, 2842535444, 2328001305, 1030529844, 72684272,
            3885232193, 4190971495, 1802226099, 3077502465, 1399196074, 15975559, 1608426341,
            2824610166, 3242678682, 97752959, 1141976170, 2545270306, 2934382174, 1423201353,
            4009237774, 989437497, 3792380846, 2436069063, 101138334, 3054205179, 476518326,
            45092653, 1388468856, 622609810, 3089605077, 273759253, 2522262643,
        ],
        &[
            1326262193, 4033304858, 3860284891, 3270761392, 301590389, 3160950768, 2103051311,
            421308210, 339700217, 2084975913, 4010857750, 3321647285, 2893234504, 3337934258,
            2470197482, 3426298259, 3795587565, 2533784226, 1029322143, 2753534641, 1002751731,
            1383277453, 1739180040, 4179121877, 686043541, 3404602754, 2524149226, 1961421140,
            739626289, 50422302, 4167603214, 890939538, 544526709, 333127915, 1031745192,
            2528526981, 2519624435, 2088255264, 2561443326, 3976592858, 1904453814, 37801928,
            2483368030, 3723552401, 479916426, 2605772934, 4101701491, 2731241841, 516350289,
            1540979081, 2317342783, 3699898529, 2962115900, 618662503, 360824901, 2483974833,
            3444107029, 23562940, 1137290279, 793246641, 3743331916, 1726283098, 3569199524,
            898653133, 4096842332, 1438551593, 32970915, 3426974921, 444732961, 724921875,
            1414708840, 1717003917, 1924528246, 4171817847, 3372667246, 3830123695, 927406351,
            2027580181, 1664983727, 2533132252, 1161370976, 2395800918, 1493087279, 3712645656,
            216022641, 405129823, 437352819, 2790439088, 3977337552, 1902827120, 3057912539,
            3003163486, 3875702633, 3752739451, 987987508, 2784338852, 840729416, 101169395,
            3198958489, 4287799304, 1745316888, 3524003193, 1226093819, 3034997281, 714903529,
            1035449811, 1648914672,
        ],
    );
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_divide_and_conquer_fail_1() {
    _limbs_modular_div_mod_divide_and_conquer(&mut [10; 3], &mut [1, 2, 3], &[], 1);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_divide_and_conquer_fail_2() {
    let ds = &[1, 2, 3];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_mod_divide_and_conquer(&mut [10; 3], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_divide_and_conquer_fail_3() {
    let ds = &[1, 2];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_mod_divide_and_conquer(&mut [], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_mod_divide_and_conquer_fail_4() {
    let ds = &[4, 5];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_mod_divide_and_conquer(&mut [10; 3], &mut [1, 2, 3], ds, inverse);
}

fn verify_limbs_modular_div(ns: &[Limb], ds: &[Limb], qs: &[Limb]) {
    let n = Natural::from_limbs_asc(ns);
    let d = Natural::from_limbs_asc(ds);
    let q = Natural::from_limbs_asc(qs);
    assert_eq!(
        (q * d).mod_power_of_two(u64::wrapping_from(ns.len()) << Limb::LOG_WIDTH),
        n
    );
}

#[cfg(feature = "32_bit_limbs")]
#[test]
fn test_limbs_modular_div_schoolbook() {
    let test = |qs_in: &[Limb], ns_in: &[Limb], ds: &[Limb], qs_out: &[Limb]| {
        let mut qs = qs_in.to_vec();
        let mut ns = ns_in.to_vec();
        let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
        _limbs_modular_div_schoolbook(&mut qs, &mut ns, ds, inverse);
        assert_eq!(&qs[..ns.len()], qs_out);
        verify_limbs_modular_div(ns_in, ds, qs_out);
    };
    test(&[10; 3], &[0, 0, 0], &[1, 2], &[0, 0, 0]);
    test(&[10; 3], &[1, 2, 3], &[1, 2], &[1, 0, 3]);
    test(
        &[10; 3],
        &[1, 2, 3],
        &[5, 6],
        &[3435973837, 3607772528, 3401614098],
    );
    test(&[10; 3], &[1, 2, 3], &[1, 2, 3], &[1, 0, 0]);
    test(&[10; 3], &[1, 2, 3], &[1, 0xffff_ffff, 3], &[1, 3, 2]);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_schoolbook_fail_1() {
    _limbs_modular_div_schoolbook(&mut [10; 3], &mut [1, 2, 3], &[], 1);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_schoolbook_fail_2() {
    let ds = &[1, 2, 3, 4];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_schoolbook(&mut [10; 3], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_schoolbook_fail_3() {
    let ds = &[1, 2];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_schoolbook(&mut [10, 10], &mut [1, 2, 3], ds, inverse);
}

#[cfg(feature = "32_bit_limbs")]
#[test]
#[should_panic]
fn limbs_modular_div_schoolbook_fail_4() {
    let ds = &[4, 5];
    let inverse = limbs_modular_invert_limb(ds[0]).wrapping_neg();
    _limbs_modular_div_schoolbook(&mut [10; 3], &mut [1, 2, 3], ds, inverse);
}

#[test]
fn limbs_modular_div_mod_schoolbook_properties() {
    test_properties(
        quadruples_of_three_unsigned_vecs_and_unsigned_var_4,
        |&(ref qs, ref ns, ref ds, inverse)| {
            let ns_old = ns;
            let mut qs = qs.to_vec();
            let mut ns = ns.to_vec();
            let borrow = _limbs_modular_div_mod_schoolbook(&mut qs, &mut ns, ds, inverse);
            let q_len = ns.len() - ds.len();
            verify_limbs_modular_div_mod(ns_old, ds, borrow, &qs[..q_len], &ns[q_len..]);
        },
    );
}

#[test]
fn limbs_modular_div_mod_divide_and_conquer_properties() {
    test_properties_custom_scale(
        128,
        quadruples_of_three_unsigned_vecs_and_unsigned_var_5,
        |&(ref qs, ref ns, ref ds, inverse)| {
            let ns_old = ns;
            let mut qs = qs.to_vec();
            let mut ns = ns.to_vec();
            let borrow = _limbs_modular_div_mod_divide_and_conquer(&mut qs, &mut ns, ds, inverse);
            let q_len = ns.len() - ds.len();
            verify_limbs_modular_div_mod(ns_old, ds, borrow, &qs[..q_len], &ns[q_len..]);
        },
    );
}

#[test]
fn limbs_modular_div_schoolbook_properties() {
    test_properties(
        quadruples_of_three_unsigned_vecs_and_unsigned_var_3,
        |&(ref qs, ref ns, ref ds, inverse)| {
            let ns_old = ns;
            let mut qs = qs.to_vec();
            let mut ns = ns.to_vec();
            _limbs_modular_div_schoolbook(&mut qs, &mut ns, ds, inverse);
            verify_limbs_modular_div(ns_old, ds, &qs);
        },
    );
}
