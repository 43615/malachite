use malachite_base_test_util::runner::Runner;

pub(crate) fn register(runner: &mut Runner) {
    abs::register(runner);
    add_mul::register(runner);
    arithmetic_checked_shl::register(runner);
    arithmetic_checked_shr::register(runner);
    checked_add_mul::register(runner);
    checked_square::register(runner);
    checked_sub_mul::register(runner);
    div_exact::register(runner);
    div_mod::register(runner);
    div_round::register(runner);
    divisible_by::register(runner);
    divisible_by_power_of_2::register(runner);
    eq_mod::register(runner);
    eq_mod_power_of_2::register(runner);
    log_base::register(runner);
    log_base_2::register(runner);
    log_base_power_of_2::register(runner);
    mod_is_reduced::register(runner);
    mod_add::register(runner);
    mod_mul::register(runner);
    mod_neg::register(runner);
    mod_op::register(runner);
    mod_pow::register(runner);
    mod_power_of_2::register(runner);
    mod_power_of_2_add::register(runner);
    mod_power_of_2_is_reduced::register(runner);
    mod_power_of_2_mul::register(runner);
    mod_power_of_2_pow::register(runner);
    mod_power_of_2_shl::register(runner);
    mod_power_of_2_shr::register(runner);
    mod_power_of_2_square::register(runner);
    mod_power_of_2_neg::register(runner);
    mod_power_of_2_sub::register(runner);
    mod_shl::register(runner);
    mod_shr::register(runner);
    mod_square::register(runner);
    mod_sub::register(runner);
    neg::register(runner);
    next_power_of_2::register(runner);
    sub_mul::register(runner);
    x_mul_y_is_zz::register(runner);
}

mod abs;
mod add_mul;
mod arithmetic_checked_shl;
mod arithmetic_checked_shr;
mod checked_add_mul;
mod checked_square;
mod checked_sub_mul;
mod div_exact;
mod div_mod;
mod div_round;
mod divisible_by;
mod divisible_by_power_of_2;
mod eq_mod;
mod eq_mod_power_of_2;
mod log_base;
mod log_base_2;
mod log_base_power_of_2;
mod mod_add;
mod mod_is_reduced;
mod mod_mul;
mod mod_neg;
mod mod_op;
mod mod_pow;
mod mod_power_of_2;
mod mod_power_of_2_add;
mod mod_power_of_2_is_reduced;
mod mod_power_of_2_mul;
mod mod_power_of_2_neg;
mod mod_power_of_2_pow;
mod mod_power_of_2_shl;
mod mod_power_of_2_shr;
mod mod_power_of_2_square;
mod mod_power_of_2_sub;
mod mod_shl;
mod mod_shr;
mod mod_square;
mod mod_sub;
mod neg;
mod next_power_of_2;
mod sub_mul;
mod x_mul_y_is_zz;
